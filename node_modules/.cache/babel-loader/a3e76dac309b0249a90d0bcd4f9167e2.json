{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/vinicastro/\\xC1rea de Trabalho/Projetos/hexcolor-generator/src/pages/Hexcolor/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { GiPerspectiveDiceSixFacesRandom } from 'react-icons/gi';\nimport { getLuminance } from 'polished';\nimport { Container, Content, Color } from './styles';\n\nconst Hexcolor = () => {\n  _s();\n\n  const [color, setColor] = useState('');\n  const rand = useCallback((minimal, max) => {\n    return Math.round(Math.random() * (max - minimal)) + minimal;\n  }, []);\n  const randomIndex = useCallback(codeHex => {\n    return rand(0, codeHex.length - 1);\n  }, [rand]);\n  const generateColor = useCallback(() => {\n    const codeHex = ['1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    let hex = '#';\n\n    for (let i = 0; i < 6; i++) {\n      const iIndex = randomIndex(codeHex);\n      hex += codeHex[iIndex];\n    }\n\n    setColor(hex);\n  }, [randomIndex]);\n  useEffect(() => {\n    generateColor();\n  }, [generateColor]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      color: color,\n      children: [/*#__PURE__*/_jsxDEV(Color, {\n        color: color,\n        isLighten: () => getLuminance(color) > 0.65,\n        children: /*#__PURE__*/_jsxDEV(GiPerspectiveDiceSixFacesRandom, {\n          size: 80\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hexcolor Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: generateColor,\n        children: \"Gerar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Hexcolor, \"yvnYu8MNgLdO06qZDJhPvpY6ZYA=\");\n\n_c = Hexcolor;\nexport default Hexcolor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hexcolor\");","map":{"version":3,"sources":["/home/vinicastro/Área de Trabalho/Projetos/hexcolor-generator/src/pages/Hexcolor/index.tsx"],"names":["React","useCallback","useState","useEffect","GiPerspectiveDiceSixFacesRandom","getLuminance","Container","Content","Color","Hexcolor","color","setColor","rand","minimal","max","Math","round","random","randomIndex","codeHex","length","generateColor","hex","i","iIndex"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,OAAxD;AAEA,SAASC,+BAAT,QAAgD,gBAAhD;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,KAA7B,QAA0C,UAA1C;;AAEA,MAAMC,QAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMU,IAAI,GAAGX,WAAW,CAAC,CAACY,OAAD,EAAkBC,GAAlB,KAAkC;AACzD,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,OAAvB,CAAX,IAA8CA,OAArD;AACD,GAFuB,EAErB,EAFqB,CAAxB;AAIA,QAAMK,WAAW,GAAGjB,WAAW,CAC5BkB,OAAD,IAA4B;AAC1B,WAAOP,IAAI,CAAC,CAAD,EAAIO,OAAO,CAACC,MAAR,GAAiB,CAArB,CAAX;AACD,GAH4B,EAI7B,CAACR,IAAD,CAJ6B,CAA/B;AAOA,QAAMS,aAAa,GAAGpB,WAAW,CAAC,MAAM;AACtC,UAAMkB,OAAO,GAAG,CACd,GADc,EAEd,GAFc,EAGd,GAHc,EAId,GAJc,EAKd,GALc,EAMd,GANc,EAOd,GAPc,EAQd,GARc,EASd,GATc,EAUd,GAVc,EAWd,GAXc,EAYd,GAZc,EAad,GAbc,EAcd,GAdc,EAed,GAfc,CAAhB;AAkBA,QAAIG,GAAG,GAAG,GAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,YAAMC,MAAM,GAAGN,WAAW,CAACC,OAAD,CAA1B;AACAG,MAAAA,GAAG,IAAIH,OAAO,CAACK,MAAD,CAAd;AACD;;AAEDb,IAAAA,QAAQ,CAACW,GAAD,CAAR;AACD,GA1BgC,EA0B9B,CAACJ,WAAD,CA1B8B,CAAjC;AA4BAf,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,aAAa;AACd,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT;AAIA,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEX,KAAhB;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEA,KAAd;AAAqB,QAAA,SAAS,EAAE,MAAML,YAAY,CAACK,KAAD,CAAZ,GAAsB,IAA5D;AAAA,+BACE,QAAC,+BAAD;AAAiC,UAAA,IAAI,EAAE;AAAvC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAME;AAAA,kBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,cANF,eAQE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEW,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA9DD;;GAAMZ,Q;;KAAAA,Q;AAgEN,eAAeA,QAAf","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\n\nimport { GiPerspectiveDiceSixFacesRandom } from 'react-icons/gi';\nimport { getLuminance } from 'polished';\nimport { Container, Content, Color } from './styles';\n\nconst Hexcolor: React.FC = () => {\n  const [color, setColor] = useState('');\n\n  const rand = useCallback((minimal: number, max: number) => {\n    return Math.round(Math.random() * (max - minimal)) + minimal;\n  }, []);\n\n  const randomIndex = useCallback(\n    (codeHex: Array<String>) => {\n      return rand(0, codeHex.length - 1);\n    },\n    [rand],\n  );\n\n  const generateColor = useCallback(() => {\n    const codeHex = [\n      '1',\n      '2',\n      '3',\n      '4',\n      '5',\n      '6',\n      '7',\n      '8',\n      '9',\n      'A',\n      'B',\n      'C',\n      'D',\n      'E',\n      'F',\n    ];\n\n    let hex = '#';\n    for (let i = 0; i < 6; i++) {\n      const iIndex = randomIndex(codeHex);\n      hex += codeHex[iIndex];\n    }\n\n    setColor(hex);\n  }, [randomIndex]);\n\n  useEffect(() => {\n    generateColor();\n  }, [generateColor]);\n\n  return (\n    <Container>\n      <Content color={color}>\n        <Color color={color} isLighten={() => getLuminance(color) > 0.65}>\n          <GiPerspectiveDiceSixFacesRandom size={80} />\n        </Color>\n        <h1>Hexcolor Generator</h1>\n\n        <span>{color}</span>\n\n        <button type=\"button\" onClick={generateColor}>\n          Gerar\n        </button>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Hexcolor;\n"]},"metadata":{},"sourceType":"module"}