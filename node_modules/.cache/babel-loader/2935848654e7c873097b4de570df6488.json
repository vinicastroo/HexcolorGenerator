{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/vinicastro/\\xC1rea de Trabalho/Projetos/hexcolor-generator/src/pages/Hexcolor/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { GiPerspectiveDiceSixFacesRandom, GiHearts } from 'react-icons/gi';\nimport { Container, Content, Color, Colors } from './styles';\n\nconst Hexcolor = () => {\n  _s();\n\n  const [color, setColor] = useState('');\n  const [colors, setColors] = useState([]);\n  const addColor = useCallback(() => {\n    setColors([color, ...colors]);\n  }, [color, colors]);\n  const rand = useCallback((minimal, max) => {\n    return Math.round(Math.random() * (max - minimal)) + minimal;\n  }, []);\n  const randomIndex = useCallback(codeHex => {\n    return rand(0, codeHex.length - 1);\n  }, [rand]);\n  const generateColor = useCallback(() => {\n    const codeHex = ['1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\n    let hex = '#';\n\n    for (let i = 0; i < 6; i++) {\n      const iIndex = randomIndex(codeHex);\n      hex += codeHex[iIndex];\n    }\n\n    setColor(hex);\n  }, [randomIndex]);\n  useEffect(() => {\n    generateColor();\n  }, [generateColor]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Content, {\n        color: color,\n        children: [/*#__PURE__*/_jsxDEV(Color, {\n          color: color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Hexcolor Generator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GiHearts, {\n            size: 20,\n            onClick: addColor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: generateColor,\n          children: [/*#__PURE__*/_jsxDEV(GiPerspectiveDiceSixFacesRandom, {\n            size: 25\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), \"Gerar\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Colors, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Hexcolor, \"0VdazDe5cYKOLTEeWsXwJX5dPF8=\");\n\n_c = Hexcolor;\nexport default Hexcolor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hexcolor\");","map":{"version":3,"sources":["/home/vinicastro/Área de Trabalho/Projetos/hexcolor-generator/src/pages/Hexcolor/index.tsx"],"names":["React","useCallback","useState","useEffect","GiPerspectiveDiceSixFacesRandom","GiHearts","Container","Content","Color","Colors","Hexcolor","color","setColor","colors","setColors","addColor","rand","minimal","max","Math","round","random","randomIndex","codeHex","length","generateColor","hex","i","iIndex"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,OAAxD;AAEA,SAASC,+BAAT,EAA0CC,QAA1C,QAA0D,gBAA1D;AACA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,KAA7B,EAAoCC,MAApC,QAAkD,UAAlD;;AAEA,MAAMC,QAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAW,EAAX,CAApC;AAEA,QAAMa,QAAQ,GAAGd,WAAW,CAAC,MAAM;AACjCa,IAAAA,SAAS,CAAC,CAACH,KAAD,EAAQ,GAAGE,MAAX,CAAD,CAAT;AACD,GAF2B,EAEzB,CAACF,KAAD,EAAQE,MAAR,CAFyB,CAA5B;AAIA,QAAMG,IAAI,GAAGf,WAAW,CAAC,CAACgB,OAAD,EAAkBC,GAAlB,KAAkC;AACzD,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,OAAvB,CAAX,IAA8CA,OAArD;AACD,GAFuB,EAErB,EAFqB,CAAxB;AAIA,QAAMK,WAAW,GAAGrB,WAAW,CAC5BsB,OAAD,IAA4B;AAC1B,WAAOP,IAAI,CAAC,CAAD,EAAIO,OAAO,CAACC,MAAR,GAAiB,CAArB,CAAX;AACD,GAH4B,EAI7B,CAACR,IAAD,CAJ6B,CAA/B;AAOA,QAAMS,aAAa,GAAGxB,WAAW,CAAC,MAAM;AACtC,UAAMsB,OAAO,GAAG,CACd,GADc,EAEd,GAFc,EAGd,GAHc,EAId,GAJc,EAKd,GALc,EAMd,GANc,EAOd,GAPc,EAQd,GARc,EASd,GATc,EAUd,GAVc,EAWd,GAXc,EAYd,GAZc,EAad,GAbc,EAcd,GAdc,EAed,GAfc,CAAhB;AAkBA,QAAIG,GAAG,GAAG,GAAV;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,YAAMC,MAAM,GAAGN,WAAW,CAACC,OAAD,CAA1B;AACAG,MAAAA,GAAG,IAAIH,OAAO,CAACK,MAAD,CAAd;AACD;;AAEDhB,IAAAA,QAAQ,CAACc,GAAD,CAAR;AACD,GA1BgC,EA0B9B,CAACJ,WAAD,CA1B8B,CAAjC;AA4BAnB,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,aAAa;AACd,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,SAAD;AAAA,6BACE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAEd,KAAhB;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAIE;AAAA,kCACE;AAAA,sBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,QAAD;AAAU,YAAA,IAAI,EAAE,EAAhB;AAAoB,YAAA,OAAO,EAAEI;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eASE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEU,aAA/B;AAAA,kCACE,QAAC,+BAAD;AAAiC,YAAA,IAAI,EAAE;AAAvC;AAAA;AAAA;AAAA;AAAA,kBADF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAiBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA,kBADF;AAqBD,CAxED;;GAAMf,Q;;KAAAA,Q;AA0EN,eAAeA,QAAf","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\n\nimport { GiPerspectiveDiceSixFacesRandom, GiHearts } from 'react-icons/gi';\nimport { Container, Content, Color, Colors } from './styles';\n\nconst Hexcolor: React.FC = () => {\n  const [color, setColor] = useState('');\n  const [colors, setColors] = useState<String[]>([]);\n\n  const addColor = useCallback(() => {\n    setColors([color, ...colors]);\n  }, [color, colors]);\n\n  const rand = useCallback((minimal: number, max: number) => {\n    return Math.round(Math.random() * (max - minimal)) + minimal;\n  }, []);\n\n  const randomIndex = useCallback(\n    (codeHex: Array<String>) => {\n      return rand(0, codeHex.length - 1);\n    },\n    [rand],\n  );\n\n  const generateColor = useCallback(() => {\n    const codeHex = [\n      '1',\n      '2',\n      '3',\n      '4',\n      '5',\n      '6',\n      '7',\n      '8',\n      '9',\n      'A',\n      'B',\n      'C',\n      'D',\n      'E',\n      'F',\n    ];\n\n    let hex = '#';\n    for (let i = 0; i < 6; i++) {\n      const iIndex = randomIndex(codeHex);\n      hex += codeHex[iIndex];\n    }\n\n    setColor(hex);\n  }, [randomIndex]);\n\n  useEffect(() => {\n    generateColor();\n  }, [generateColor]);\n\n  return (\n    <>\n      <Container>\n        <Content color={color}>\n          <Color color={color} />\n          <h1>Hexcolor Generator</h1>\n\n          <div>\n            <span>{color}</span>\n            <GiHearts size={20} onClick={addColor} />\n          </div>\n\n          <button type=\"button\" onClick={generateColor}>\n            <GiPerspectiveDiceSixFacesRandom size={25} />\n            Gerar\n          </button>\n        </Content>\n      </Container>\n      <Colors />\n    </>\n  );\n};\n\nexport default Hexcolor;\n"]},"metadata":{},"sourceType":"module"}